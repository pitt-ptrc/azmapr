[{"path":"https://pitt-ptrc.github.io/azmapr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 azmapr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matt Broerman. Author, maintainer.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Broerman M (2023). azmapr: Access Tidy Azure Maps API. https://github.com/pitt-ptrc/azmapr, https://pitt-ptrc.github.io/azmapr/.","code":"@Manual{,   title = {azmapr: Access and Tidy Azure Maps API},   author = {Matt Broerman},   year = {2023},   note = {https://github.com/pitt-ptrc/azmapr, https://pitt-ptrc.github.io/azmapr/}, }"},{"path":"https://pitt-ptrc.github.io/azmapr/index.html","id":"azmapr","dir":"","previous_headings":"","what":"Access and Tidy Azure Maps API","title":"Access and Tidy Azure Maps API","text":"goal azmapr access Azure Maps API tidy results.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access and Tidy Azure Maps API","text":"can install development version azmapr like :","code":"remotes::install_github(\"pitt-ptrc/azmapr\")"},{"path":"https://pitt-ptrc.github.io/azmapr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Access and Tidy Azure Maps API","text":"Given data frame column address, main wrapper function azm_geocode sane defaults. Azure Maps API limits 100 address batches. pass 100, azmapr breaks chunks pauses briefly . Azure Maps supports async geocoding larger batches, azmapr hasn’t figured yet. want adjust settings, functions pipe-able. can also reverse geocode. , given dataframe lat lon main wrapper sane defaults. Suppose want associate 9-digit zipcodes coordinates. can also pipe adjust","code":"library(azmapr)  azm_geocode(cand) #> # A tibble: 6 × 4 #>   id              address                                  lat   lon #>   <chr>           <chr>                                  <dbl> <dbl> #> 1 Conor_Lamb      P.O. Box 10381, Pittsburgh, PA 15234    40.4 -80.0 #> 2 Dave_McCormick  117 Woodland Rd., Pittsburgh, PA 15232  40.4 -79.9 #> 3 Jeff_Coleman    P.O. Box 23173, Pittsburgh, PA 15222    40.4 -80.0 #> 4 Steve_Irwin     5271 Forbes Ave., Pittsburgh, PA 15217  40.4 -79.9 #> 5 Jerry_Dickinson 1211 Milton St., Pittsburgh, PA 15218   40.4 -79.9 #> 6 Summer_Lee      7502 Roslyn St., Pittsburgh, PA 15218   40.4 -79.9 azm_geocode(cand, .test_batch = TRUE) #> running batch  1  #> running batch  2  #> running batch  3 #> # A tibble: 6 × 5 #>   id              address                                group   lat   lon #>   <chr>           <chr>                                  <dbl> <dbl> <dbl> #> 1 Conor_Lamb      P.O. Box 10381, Pittsburgh, PA 15234       0  40.4 -80.0 #> 2 Dave_McCormick  117 Woodland Rd., Pittsburgh, PA 15232     0  40.4 -79.9 #> 3 Jeff_Coleman    P.O. Box 23173, Pittsburgh, PA 15222       1  40.4 -80.0 #> 4 Steve_Irwin     5271 Forbes Ave., Pittsburgh, PA 15217     1  40.4 -79.9 #> 5 Jerry_Dickinson 1211 Milton St., Pittsburgh, PA 15218      2  40.4 -79.9 #> 6 Summer_Lee      7502 Roslyn St., Pittsburgh, PA 15218      2  40.4 -79.9 cand |>    azm_fmt_batch(address, limit = 2) |>    azm_request_batch(direction = \"fwd\") |>    azm_extract_body(type = \"viewport\", direction = \"fwd\") |>    dplyr::bind_rows() |>    dplyr::mutate(topLeftPoint = unlist(topLeftPoint),                 btmRightPoint = unlist(btmRightPoint)) #> # A tibble: 12 × 2 #>    topLeftPoint btmRightPoint #>           <dbl>         <dbl> #>  1         40.4          40.4 #>  2        -80.1         -80.0 #>  3         40.4          40.4 #>  4        -79.9         -79.9 #>  5         40.5          40.4 #>  6        -80.0         -80.0 #>  7         40.4          40.4 #>  8        -79.9         -79.9 #>  9         40.4          40.4 #> 10        -79.9         -79.9 #> 11         40.4          40.4 #> 12        -79.9         -79.9 coords |>    azm_rev_geocode(lat, lon) |>    dplyr::select(lat, lon, streetNameAndNumber, extendedPostalCode) #> # A tibble: 6 × 4 #>     lat   lon streetNameAndNumber extendedPostalCode #>   <dbl> <dbl> <chr>               <chr>              #> 1  40.4 -80.0 946 Locust Avenue   15234-2112         #> 2  40.4 -79.9 117 Woodland Road   15232-2815         #> 3  40.4 -80.0 929 Penn Avenue     15222-3802         #> 4  40.4 -79.9 5271 Forbes Avenue  15217-1161         #> 5  40.4 -79.9 1211 Milton Street  15218-1232         #> 6  40.4 -79.9 7502 Roslyn Street  15218-2519 coords |>    azm_fmt_rev_batch(lat, lon, limit = 1) |>    azm_request_batch(direction = \"rev\") |>    azm_extract_body(type = \"address\", direction = \"rev\") |>    dplyr::bind_rows() #> # A tibble: 6 × 18 #>   buildingNumber streetNumber street  streetName streetNameAndNumber countryCode #>   <chr>          <chr>        <chr>   <chr>      <chr>               <chr>       #> 1 946            946          Locust… Locust Av… 946 Locust Avenue   US          #> 2 117            117          Woodla… Woodland … 117 Woodland Road   US          #> 3 929            929          Penn A… Penn Aven… 929 Penn Avenue     US          #> 4 5271           5271         Forbes… Forbes Av… 5271 Forbes Avenue  US          #> 5 1211           1211         Milton… Milton St… 1211 Milton Street  US          #> 6 7502           7502         Roslyn… Roslyn St… 7502 Roslyn Street  US          #> # ℹ 12 more variables: countrySubdivision <chr>, #> #   countrySecondarySubdivision <chr>, municipality <chr>, postalCode <chr>, #> #   country <chr>, countryCodeISO3 <chr>, freeformAddress <chr>, #> #   extendedPostalCode <chr>, countrySubdivisionName <chr>, #> #   countrySubdivisionCode <chr>, localName <chr>, #> #   municipalitySubdivision <chr>"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_extract_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Specified Data from Azure Maps API Response — azm_extract_body","title":"Extract Specified Data from Azure Maps API Response — azm_extract_body","text":"function extract specified data types Azure Maps API response.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_extract_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Specified Data from Azure Maps API Response — azm_extract_body","text":"","code":"azm_extract_body(body_json, type, direction)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_extract_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Specified Data from Azure Maps API Response — azm_extract_body","text":"body_json JSON. response Azure Maps API. type string nested list object field, e.g. \"position\", \"address\", \"matchConfidence\". direction \"fwd\" \"rev\"","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_extract_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Specified Data from Azure Maps API Response — azm_extract_body","text":"List. extracted data.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fmt_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a Batch of Addresses for Geocoding with Azure Maps — azm_fmt_batch","title":"Format a Batch of Addresses for Geocoding with Azure Maps — azm_fmt_batch","text":"function format batch addresses geocoding using Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fmt_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a Batch of Addresses for Geocoding with Azure Maps — azm_fmt_batch","text":"","code":"azm_fmt_batch(df, address, limit = 1)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fmt_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a Batch of Addresses for Geocoding with Azure Maps — azm_fmt_batch","text":"df data frame containing addresses. address column df containing addresses geocode. limit integer. maximum number results return.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fmt_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a Batch of Addresses for Geocoding with Azure Maps — azm_fmt_batch","text":"JSON. formatted JSON string ready use Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fmt_rev_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a Batch of Coordinates for Reverse Geocoding with Azure Maps — azm_fmt_rev_batch","title":"Format a Batch of Coordinates for Reverse Geocoding with Azure Maps — azm_fmt_rev_batch","text":"function format batch coordinates geocoding using Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fmt_rev_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a Batch of Coordinates for Reverse Geocoding with Azure Maps — azm_fmt_rev_batch","text":"","code":"azm_fmt_rev_batch(df, lat, lon, limit = 1)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fmt_rev_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a Batch of Coordinates for Reverse Geocoding with Azure Maps — azm_fmt_rev_batch","text":"df data frame containing coordinates lat column df containing latitude geocode. lon column df containing longitude geocode. limit integer. maximum number results return.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fmt_rev_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a Batch of Coordinates for Reverse Geocoding with Azure Maps — azm_fmt_rev_batch","text":"JSON. formatted JSON string ready use Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fwd_batch_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Azure Maps API Forward Batch URL Component — azm_fwd_batch_url","title":"Azure Maps API Forward Batch URL Component — azm_fwd_batch_url","text":"character string storing URL component Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fwd_batch_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Azure Maps API Forward Batch URL Component — azm_fwd_batch_url","text":"","code":"azm_fwd_batch_url"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fwd_batch_url.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Azure Maps API Forward Batch URL Component — azm_fwd_batch_url","text":"object class character length 1.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode Addresses with the AZM Geocoding Service — azm_geocode","title":"Geocode Addresses with the AZM Geocoding Service — azm_geocode","text":"function interacts AZM geocoding service geocode addresses data frame, handling batching type selection.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode Addresses with the AZM Geocoding Service — azm_geocode","text":"","code":"azm_geocode(df, address, type = \"position\", .test_batch = FALSE)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode Addresses with the AZM Geocoding Service — azm_geocode","text":"df data frame containing addresses geocoded. address string indicating name column df containing addresses geocoded. type string indicating type geocoding performed. Must one \"position\", \"address\", \"matchConfidence\". .test_batch logical. TRUE, function run test mode, processing small subset data.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode Addresses with the AZM Geocoding Service — azm_geocode","text":"data frame containing original data plus geocoding results.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geocode Addresses with the AZM Geocoding Service — azm_geocode","text":"","code":"azm_geocode(cand, address) #> Error in get_azm_url(direction = direction): Azure Maps API Subscription Key not found in your environment variables.  #> Obtain a key from https://azure.com/maps and set it using:  #> Sys.setenv(AZ_MAPS_SUBSCRIPTION_KEY = 'your_key_here')"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode Addresses with Azure Maps — azm_geocode_batch","title":"Geocode Addresses with Azure Maps — azm_geocode_batch","text":"Utilize Azure Maps services geocode addresses, returning either positional information, address details, confidence scores, available details.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode Addresses with Azure Maps — azm_geocode_batch","text":"","code":"azm_geocode_batch(df, address, type = \"position\")"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode Addresses with Azure Maps — azm_geocode_batch","text":"df data frame containing addresses geocoded. address character vector specifying address column(s) df. type character string indicating type data return. Must one \"position\", \"address\", \"matchConfidence\", \"\". Default \"position\".","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode Addresses with Azure Maps — azm_geocode_batch","text":"data frame containing original data along requested geocoding information.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode_rev_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode Addresses with Azure Maps — azm_geocode_rev_batch","title":"Geocode Addresses with Azure Maps — azm_geocode_rev_batch","text":"Utilize Azure Maps services geocode addresses, returning either positional information, address details, confidence scores, available details.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode_rev_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode Addresses with Azure Maps — azm_geocode_rev_batch","text":"","code":"azm_geocode_rev_batch(df, lat, lon, type = \"address\")"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode_rev_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode Addresses with Azure Maps — azm_geocode_rev_batch","text":"df data frame containing addresses geocoded. lat column df containing latitude geocode. lon column df containing longitude geocode. type character string indicating type data return. Must one \"position\", \"address\", \"matchConfidence\", \"\". Default \"position\".","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode_rev_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode Addresses with Azure Maps — azm_geocode_rev_batch","text":"data frame containing original data along requested geocoding information.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_request_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Request a Batch of Addresses from Azure Maps — azm_request_batch","title":"Request a Batch of Addresses from Azure Maps — azm_request_batch","text":"function request batch addresses using Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_request_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Request a Batch of Addresses from Azure Maps — azm_request_batch","text":"","code":"azm_request_batch(batch_json, direction)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_request_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Request a Batch of Addresses from Azure Maps — azm_request_batch","text":"batch_json JSON. JSON string formatted use Azure Maps API. direction \"fwd\" \"rev\"","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_request_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Request a Batch of Addresses from Azure Maps — azm_request_batch","text":"JSON. response Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_rev_batch_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Azure Maps API Reverse Batch URL Component — azm_rev_batch_url","title":"Azure Maps API Reverse Batch URL Component — azm_rev_batch_url","text":"character string storing URL component Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_rev_batch_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Azure Maps API Reverse Batch URL Component — azm_rev_batch_url","text":"","code":"azm_rev_batch_url"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_rev_batch_url.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Azure Maps API Reverse Batch URL Component — azm_rev_batch_url","text":"object class character length 1.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_rev_geocode.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse Geocode Addresses with the AZM Geocoding Service — azm_rev_geocode","title":"Reverse Geocode Addresses with the AZM Geocoding Service — azm_rev_geocode","text":"function interacts AZM geocoding service reverse geocode coordinates data frame, handling batching type selection.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_rev_geocode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse Geocode Addresses with the AZM Geocoding Service — azm_rev_geocode","text":"","code":"azm_rev_geocode(df, lat, lon, type = \"address\", .test_batch = FALSE)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_rev_geocode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse Geocode Addresses with the AZM Geocoding Service — azm_rev_geocode","text":"df data frame containing addresses geocoded. lat column df containing latitude geocode. lon column df containing longitude geocode. type string indicating type geocoding performed. Must one \"position\", \"address\", \"matchConfidence\". .test_batch logical. TRUE, function run test mode, processing small batches data.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_rev_geocode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse Geocode Addresses with the AZM Geocoding Service — azm_rev_geocode","text":"data frame containing original data plus geocoding results.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/cand.html","id":null,"dir":"Reference","previous_headings":"","what":"Candidate Addresses — cand","title":"Candidate Addresses — cand","text":"dataset containing IDs addresses certain candidates.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/cand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Candidate Addresses — cand","text":"","code":"cand"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/cand.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Candidate Addresses — cand","text":"data frame 6 rows 2 variables: id character vector candidate identifiers. address character vector candidate addresses.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/cand.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Candidate Addresses — cand","text":"[URL data taken , applicable]","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/cand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Candidate Addresses — cand","text":"","code":"data(cand) head(cand) #> # A tibble: 6 × 2 #>   id              address                                #>   <chr>           <chr>                                  #> 1 Conor_Lamb      P.O. Box 10381, Pittsburgh, PA 15234   #> 2 Dave_McCormick  117 Woodland Rd., Pittsburgh, PA 15232 #> 3 Jeff_Coleman    P.O. Box 23173, Pittsburgh, PA 15222   #> 4 Steve_Irwin     5271 Forbes Ave., Pittsburgh, PA 15217 #> 5 Jerry_Dickinson 1211 Milton St., Pittsburgh, PA 15218  #> 6 Summer_Lee      7502 Roslyn St., Pittsburgh, PA 15218"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinates dataset — coords","title":"Coordinates dataset — coords","text":"dataset containing latitude longitude values certain locations.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinates dataset — coords","text":"","code":"coords"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/coords.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Coordinates dataset — coords","text":"data frame 6 rows 2 variables: lat Latitude location. Numeric. lon Longitude location. Numeric.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinates dataset — coords","text":"","code":"head(coords) #> # A tibble: 6 × 2 #>     lat   lon #>   <dbl> <dbl> #> 1  40.4 -80.0 #> 2  40.4 -79.9 #> 3  40.4 -80.0 #> 4  40.4 -79.9 #> 5  40.4 -79.9 #> 6  40.4 -79.9  # Plotting the coordinates plot(coords$lon, coords$lat)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/get_azm_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Full Azure Maps API URL — get_azm_url","title":"Retrieve Full Azure Maps API URL — get_azm_url","text":"function retrieves returns full URL Azure Maps API, ensuring necessary API key available user's environment.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/get_azm_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Full Azure Maps API URL — get_azm_url","text":"","code":"get_azm_url(direction)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/get_azm_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Full Azure Maps API URL — get_azm_url","text":"direction Forward \"fwd\" Reverse \"rev\"","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/get_azm_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Full Azure Maps API URL — get_azm_url","text":"string, complete API URL including subscription key.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/get_azm_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Full Azure Maps API URL — get_azm_url","text":"","code":"if (FALSE) { url <- get_azm_url() }"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/req_body_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditionally Set Request Body — req_body_cond","title":"Conditionally Set Request Body — req_body_cond","text":"function conditionally sets body HTTP request depending type batch_json. batch_json JSON object, req_body_raw used; valid file path (character string), req_body_file used.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/req_body_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditionally Set Request Body — req_body_cond","text":"","code":"req_body_cond(request, batch_json)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/req_body_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditionally Set Request Body — req_body_cond","text":"request request object created httr::request(). batch_json Either JSON object character string representing file path JSON file.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/req_body_cond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditionally Set Request Body — req_body_cond","text":"modified request object.","code":""}]
