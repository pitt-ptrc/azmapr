[{"path":"https://pitt-ptrc.github.io/azmapr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 azmapr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matt Broerman. Author, maintainer.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Broerman M (2023). azmapr: Access Tidy Azure Maps API. https://github.com/pitt-ptrc/azmapr, https://pitt-ptrc.github.io/azmapr/.","code":"@Manual{,   title = {azmapr: Access and Tidy Azure Maps API},   author = {Matt Broerman},   year = {2023},   note = {https://github.com/pitt-ptrc/azmapr, https://pitt-ptrc.github.io/azmapr/}, }"},{"path":"https://pitt-ptrc.github.io/azmapr/index.html","id":"azmapr","dir":"","previous_headings":"","what":"Access and Tidy Azure Maps API","title":"Access and Tidy Azure Maps API","text":"goal azmapr access Azure Maps API tidy results.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access and Tidy Azure Maps API","text":"can install development version azmapr like :","code":"remotes::install_github(\"pitt-ptrc/azmapr\")"},{"path":"https://pitt-ptrc.github.io/azmapr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Access and Tidy Azure Maps API","text":"Given data frame column address, main wrapper function azm_geocode sane defaults. Azure Maps API limits 100 address batches. pass 100, azmapr breaks chunks pauses briefly . Azure Maps supports async geocoding larger batches, azmapr hasn’t figured yet. want adjust settings, functions pipe-able.","code":"library(azmapr)  azm_geocode(cand) #> # A tibble: 6 × 4 #>   id              address                                  lat   lon #>   <chr>           <chr>                                  <dbl> <dbl> #> 1 Conor_Lamb      P.O. Box 10381, Pittsburgh, PA 15234    40.4 -80.0 #> 2 Dave_McCormick  117 Woodland Rd., Pittsburgh, PA 15232  40.4 -79.9 #> 3 Jeff_Coleman    P.O. Box 23173, Pittsburgh, PA 15222    40.4 -80.0 #> 4 Steve_Irwin     5271 Forbes Ave., Pittsburgh, PA 15217  40.4 -79.9 #> 5 Jerry_Dickinson 1211 Milton St., Pittsburgh, PA 15218   40.4 -79.9 #> 6 Summer_Lee      7502 Roslyn St., Pittsburgh, PA 15218   40.4 -79.9 azm_geocode(cand, test_batch = TRUE) #> running batch  1  #> running batch  2  #> running batch  3 #> # A tibble: 6 × 5 #>   id              address                                group   lat   lon #>   <chr>           <chr>                                  <dbl> <dbl> <dbl> #> 1 Conor_Lamb      P.O. Box 10381, Pittsburgh, PA 15234       0  40.4 -80.0 #> 2 Dave_McCormick  117 Woodland Rd., Pittsburgh, PA 15232     0  40.4 -79.9 #> 3 Jeff_Coleman    P.O. Box 23173, Pittsburgh, PA 15222       1  40.4 -80.0 #> 4 Steve_Irwin     5271 Forbes Ave., Pittsburgh, PA 15217     1  40.4 -79.9 #> 5 Jerry_Dickinson 1211 Milton St., Pittsburgh, PA 15218      2  40.4 -79.9 #> 6 Summer_Lee      7502 Roslyn St., Pittsburgh, PA 15218      2  40.4 -79.9 cand |>    azm_fmt_batch(address, limit = 2) |>    azm_request_batch() |>    azm_extract_body(type = \"viewport\") |>    dplyr::bind_rows() |>    dplyr::mutate(topLeftPoint = unlist(topLeftPoint),                 btmRightPoint = unlist(btmRightPoint)) #> # A tibble: 12 × 2 #>    topLeftPoint btmRightPoint #>           <dbl>         <dbl> #>  1         40.4          40.4 #>  2        -80.1         -80.0 #>  3         40.4          40.4 #>  4        -79.9         -79.9 #>  5         40.5          40.4 #>  6        -80.0         -80.0 #>  7         40.4          40.4 #>  8        -79.9         -79.9 #>  9         40.4          40.4 #> 10        -79.9         -79.9 #> 11         40.4          40.4 #> 12        -79.9         -79.9"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_extract_body.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Specified Data from Azure Maps API Response — azm_extract_body","title":"Extract Specified Data from Azure Maps API Response — azm_extract_body","text":"function extract specified data types Azure Maps API response.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_extract_body.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Specified Data from Azure Maps API Response — azm_extract_body","text":"","code":"azm_extract_body(body_json, type = \"position\")"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_extract_body.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Specified Data from Azure Maps API Response — azm_extract_body","text":"body_json JSON. response Azure Maps API. type string nested list object field, e.g. \"position\", \"address\", \"matchConfidence\".","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_extract_body.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Specified Data from Azure Maps API Response — azm_extract_body","text":"List. extracted data.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fmt_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a Batch of Addresses for Geocoding with Azure Maps — azm_fmt_batch","title":"Format a Batch of Addresses for Geocoding with Azure Maps — azm_fmt_batch","text":"function format batch addresses geocoding using Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fmt_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a Batch of Addresses for Geocoding with Azure Maps — azm_fmt_batch","text":"","code":"azm_fmt_batch(df, address, limit = 1)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fmt_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a Batch of Addresses for Geocoding with Azure Maps — azm_fmt_batch","text":"df data frame containing addresses. address column df containing addresses geocode. limit integer. maximum number results return.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_fmt_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a Batch of Addresses for Geocoding with Azure Maps — azm_fmt_batch","text":"JSON. formatted JSON string ready use Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode Addresses with the AZM Geocoding Service — azm_geocode","title":"Geocode Addresses with the AZM Geocoding Service — azm_geocode","text":"function interacts AZM geocoding service geocode addresses data frame, handling batching type selection.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode Addresses with the AZM Geocoding Service — azm_geocode","text":"","code":"azm_geocode(df, address, type = \"position\", test_batch = FALSE)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode Addresses with the AZM Geocoding Service — azm_geocode","text":"df data frame containing addresses geocoded. address string indicating name column df containing addresses geocoded. type string indicating type geocoding performed. Must one \"position\", \"address\", \"matchConfidence\". test_batch logical. TRUE, function run test mode, processing small subset data.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode Addresses with the AZM Geocoding Service — azm_geocode","text":"data frame containing original data plus geocoding results.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geocode Addresses with the AZM Geocoding Service — azm_geocode","text":"","code":"if (FALSE) { azm_geocode(my_data, \"street_address_column\") }"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Geocode Addresses with Azure Maps — azm_geocode_batch","title":"Geocode Addresses with Azure Maps — azm_geocode_batch","text":"Utilize Azure Maps services geocode addresses, returning either positional information, address details, confidence scores, available details.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geocode Addresses with Azure Maps — azm_geocode_batch","text":"","code":"azm_geocode_batch(df, address, type = \"position\")"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geocode Addresses with Azure Maps — azm_geocode_batch","text":"df data frame containing addresses geocoded. address character vector specifying address column(s) df. type character string indicating type data return. Must one \"position\", \"address\", \"matchConfidence\", \"\". Default \"position\".","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_geocode_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geocode Addresses with Azure Maps — azm_geocode_batch","text":"data frame containing original data along requested geocoding information.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_maps_base_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Azure Maps API Base URL Component — azm_maps_base_url","title":"Azure Maps API Base URL Component — azm_maps_base_url","text":"character string storing base URL component Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_maps_base_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Azure Maps API Base URL Component — azm_maps_base_url","text":"","code":"azm_maps_base_url"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_maps_base_url.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Azure Maps API Base URL Component — azm_maps_base_url","text":"object class character length 1.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_request_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Request a Batch of Addresses from Azure Maps — azm_request_batch","title":"Request a Batch of Addresses from Azure Maps — azm_request_batch","text":"function request batch addresses using Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_request_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Request a Batch of Addresses from Azure Maps — azm_request_batch","text":"","code":"azm_request_batch(batch_json)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_request_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Request a Batch of Addresses from Azure Maps — azm_request_batch","text":"batch_json JSON. JSON string formatted use Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/azm_request_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Request a Batch of Addresses from Azure Maps — azm_request_batch","text":"JSON. response Azure Maps API.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/cand.html","id":null,"dir":"Reference","previous_headings":"","what":"Candidate Addresses — cand","title":"Candidate Addresses — cand","text":"dataset containing IDs addresses certain candidates.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/cand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Candidate Addresses — cand","text":"","code":"cand"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/cand.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Candidate Addresses — cand","text":"data frame 6 rows 2 variables: id character vector candidate identifiers. address character vector candidate addresses.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/cand.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Candidate Addresses — cand","text":"[URL data taken , applicable]","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/cand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Candidate Addresses — cand","text":"","code":"data(cand) head(cand) #> # A tibble: 6 × 2 #>   id              address                                #>   <chr>           <chr>                                  #> 1 Conor_Lamb      P.O. Box 10381, Pittsburgh, PA 15234   #> 2 Dave_McCormick  117 Woodland Rd., Pittsburgh, PA 15232 #> 3 Jeff_Coleman    P.O. Box 23173, Pittsburgh, PA 15222   #> 4 Steve_Irwin     5271 Forbes Ave., Pittsburgh, PA 15217 #> 5 Jerry_Dickinson 1211 Milton St., Pittsburgh, PA 15218  #> 6 Summer_Lee      7502 Roslyn St., Pittsburgh, PA 15218"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/get_azm_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Full Azure Maps API URL — get_azm_url","title":"Retrieve Full Azure Maps API URL — get_azm_url","text":"function retrieves returns full URL Azure Maps API, ensuring necessary API key available user's environment.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/get_azm_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Full Azure Maps API URL — get_azm_url","text":"","code":"get_azm_url()"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/get_azm_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Full Azure Maps API URL — get_azm_url","text":"string, complete API URL including subscription key.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/get_azm_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Full Azure Maps API URL — get_azm_url","text":"","code":"if (FALSE) { url <- get_azm_url() }"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/req_body_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditionally Set Request Body — req_body_cond","title":"Conditionally Set Request Body — req_body_cond","text":"function conditionally sets body HTTP request depending type batch_json. batch_json JSON object, req_body_raw used; valid file path (character string), req_body_file used.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/req_body_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditionally Set Request Body — req_body_cond","text":"","code":"req_body_cond(request, batch_json)"},{"path":"https://pitt-ptrc.github.io/azmapr/reference/req_body_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditionally Set Request Body — req_body_cond","text":"request request object created httr::request(). batch_json Either JSON object character string representing file path JSON file.","code":""},{"path":"https://pitt-ptrc.github.io/azmapr/reference/req_body_cond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditionally Set Request Body — req_body_cond","text":"modified request object.","code":""}]
